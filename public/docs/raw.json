{"majorversion": 2, "classmap": {"FirstButton": {"name": "FirstButton", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'next' event"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "Button", "superclass": "Button", "file": "First.js", "guessedtype": "property", "shortname": "FirstButton", "requires": "ptclass", "properties": {"defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a button element preconfigured with a 'next' event"}, "LoadButton": {"name": "LoadButton", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'next' event"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "Button", "superclass": "Button", "file": "Load.js", "guessedtype": "property", "shortname": "LoadButton", "requires": "ptclass", "properties": {"defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a button element preconfigured with a 'next' event"}, "Container": {"name": "Container", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Toggles the display of related content to a change event from a grouping of radio buttons."}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"getWidth": {"public": "", "return": {"type": "Integer", "description": "Computed width of the Container"}, "description": "Returns the computed width of the Container; result has no units", "guessedname": "getWidth", "guessedtype": "function"}, "hide": {"public": "", "return": {"type": "Void", "description": ""}, "description": "Hides the related content.", "guessedname": "hide", "guessedtype": "function"}, "passEventToChild": {"return": {"type": "Void", "description": ""}, "description": "Passes a given event to the given node", "private": "", "params": [{"type": "Object", "name": "event", "description": " - Event reference"}, {"type": "Integer/Object", "name": "child", "description": " - JDOM reference to a node element"}], "guessedname": "passEventToChild", "guessedtype": "function"}, "show": {"public": "", "return": {"type": "Void", "description": ""}, "description": "Shows the related content.", "guessedname": "show", "guessedtype": "function"}, "getHeight": {"public": "", "return": {"type": "Integer", "description": "Computed height of the Container"}, "description": "Returns the computed height of the Container; result has no units", "guessedname": "getHeight", "guessedtype": "function"}, "bindEvents": {"guessedname": "bindEvents", "return": {"type": "Void", "description": ""}, "description": "Binds all events for the Container", "private": "", "guessedtype": "function"}, "onHideHandler": {"return": {"type": "Void", "description": ""}, "description": "The \"hide\"/\"unselect\" event handler", "private": "", "params": [{"type": "Object", "name": "event", "description": " - JQuery event"}], "guessedname": "onHideHandler", "guessedtype": "function"}, "initializeURI": {"guessedname": "initializeURI", "return": {"type": "Void", "description": ""}, "description": "If the settings.uri exists, initialize the URI for the data loader.", "private": "", "guessedtype": "function"}, "initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}, "onShowHandler": {"return": {"type": "Void", "description": ""}, "description": "The \"show\"/\"select\" event handler", "private": "", "params": [{"type": "Object", "name": "event", "description": " - JQuery event"}, {"type": "String|Object", "name": "item", "description": " - The ID or JQuery object for the selected container."}], "guessedname": "onShowHandler", "guessedtype": "function"}, "getAthenaParent": {"guessedname": "getAthenaParent", "return": {"type": "Object", "description": "$parent - JDOM reference to the parent of the Container"}, "description": "Gets the closest $parent of the Container if the $parent is a Athena object ( has the attribute \"data-athena\" )\nand is not the <body>", "private": "", "guessedtype": "function"}}, "extends": "Abstract", "superclass": "Abstract", "file": "Container.js", "guessedtype": "property", "shortname": "Container", "requires": "ptclass", "properties": {"Reveal": {"guessedname": "Container", "type": "Object", "description": "Instance of Reveal", "private": "", "guessedtype": "property"}, "$parent": {"type": "Object", "description": "JQuery DOM reference to the parent of the Container", "private": ""}, "hiddenClass": {"type": "String", "description": "Classname for the hidden class from config", "private": ""}, "loader": {"type": "Object", "description": "Reference to an instance of the Loader control", "private": ""}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}, "loaded": {"guessedname": "loaded", "type": "Boolean", "description": "Denotes whether the Container has dynamically loaded the data/content", "private": "", "guessedtype": "property"}, "$content": {"type": "Object", "description": "JQuery DOM reference to the \"content\" of the Container\nDefined by the \"class\" content", "private": ""}, "selectedClass": {"type": "String", "description": "Classname for the selected class from config", "private": ""}}, "description": "Toggles the display of related content to a change event from a grouping of radio buttons."}, "LeftTip": {"name": "LeftTip", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Tooltip class"}], "namespace": "", "module": "athena", "guessedname": "Class", "extends": "Tip", "superclass": "Tip", "file": "Left.js", "guessedtype": "property", "shortname": "LeftTip", "requires": "ptclass", "description": "Tooltip class"}, "LastButton": {"name": "LastButton", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'next' event"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "Button", "superclass": "Button", "file": "Last.js", "guessedtype": "property", "shortname": "LastButton", "requires": "ptclass", "properties": {"defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a button element preconfigured with a 'next' event"}, "Accordion": {"name": "Accordion", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "A representation of an accordion UI element"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "List", "superclass": "List", "file": "Accordion.js", "guessedtype": "property", "shortname": "Accordion", "requires": "ptclass", "properties": {"$last": {"type": "Object", "description": "The last-selected panel"}, "$buttons": {"type": "Object", "description": "JQuery collection of accordion toggle-buttons in the list", "private": ""}, "$panels": {"type": "Object", "description": "JQuery collection of like items in the list", "private": ""}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}, "Accordion": {"guessedname": "Accordion", "type": "Object", "description": "Instance of Accordion", "private": "", "guessedtype": "property"}}, "description": "A representation of an accordion UI element"}, "Tip": {"name": "Tip", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Tooltip class"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"mouseenterEvent": {"description": "Function to run on mouseenter. Must be named so we can pass it specifically to jQuery's off.", "private": ""}, "hide": {"privelaged": "", "description": "Hide the tip", "guessedname": "hide", "guessedtype": "function"}, "show": {"privelaged": "", "description": "Show the tip", "guessedname": "show", "guessedtype": "function"}, "isMouseInside": {"description": "Returns true if the mouse is within the threshold area", "private": ""}, "initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery collection containing the related element."}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "Tip constructor", "guessedname": "initialize", "guessedtype": "function"}, "getPosition": {"returns": "position {Object} And object containing a top and left", "params": [{"type": "Boolean", "name": "cache", "description": "  Uses the cached position by default or if set to true."}], "description": "Used to determine the position of the tip", "private": ""}}, "extends": "Abstract", "superclass": "Abstract", "file": "Tip.js", "guessedtype": "property", "shortname": "Tip", "requires": "ptclass", "properties": {"content": {"type": "Object", "description": "The derived content used in the tip", "private": ""}, "shown": {"guessedname": "shown", "type": "Boolean", "description": "An indicator of weather or not the tip is curently shown.", "private": "", "guessedtype": "property"}, "placement": {"guessedname": "placement", "type": "String", "description": "The placement of the tip. above || below || right || left", "private": "", "guessedtype": "property"}, "defaults": {"description": "Default configuration values for all Tip instances", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}, "$document": {"guessedname": "document", "type": "Object", "description": "A jQuery collection that references the document.", "private": "", "guessedtype": "property"}, "$tip": {"type": "Object", "description": "A jQuery collection that references the the tip.", "private": ""}, "Tip": {"guessedname": "Tip", "type": "Object", "description": "Instance of Tip", "private": "", "guessedtype": "property"}, "sticky": {"guessedname": "sticky", "type": "Boolean", "description": "If set to true the tip will remain open until the mouse has left the tip.", "private": "", "guessedtype": "property"}, "delay": {"guessedname": "delay", "type": "Number", "description": "The time in milliseconds before before the Tip hides after the user has stopped interacting with it.", "private": "", "guessedtype": "property"}, "stuck": {"type": "Object", "description": "An indicator of wether or not the tip should remain open", "private": ""}, "template": {"guessedname": "template", "type": "String", "description": "An underscore template to be used in generating the tip. (see: http://documentcloud.github.com/underscore/)", "private": "", "guessedtype": "property"}, "offsetTop": {"guessedname": "offsetTop", "type": "Number", "description": "The number of pixels from the top of the element the tip will be positioned at.", "private": "", "guessedtype": "property"}, "threshold": {"guessedname": "threshold", "type": "Number", "description": "The buffer in pixels around the element to be used in determing if the user has stoped interacting with the tip", "private": "", "guessedtype": "property"}, "position": {"type": "Object", "description": "The cached position of the tip", "private": ""}, "$content": {"type": "Object", "description": "A jQuery collection that references the tip's content.", "private": ""}}, "description": "Tooltip class"}, "MultiSwitch": {"name": "MultiSwitch", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a stateful button element"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "Switch", "superclass": "Switch", "file": "MultiSwitch.js", "guessedtype": "property", "shortname": "MultiSwitch", "requires": "ptclass", "properties": {"defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a stateful button element"}, "OffButton": {"name": "OffButton", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'next' event"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "Button", "superclass": "Button", "file": "Off.js", "guessedtype": "property", "shortname": "OffButton", "requires": "ptclass", "properties": {"defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a button element preconfigured with a 'next' event"}, "Carousel": {"name": "Carousel", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "A representation of Carousel"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"play": {"public": "", "return": {"type": "Object", "description": "The Carousel instance"}, "description": "Plays the Carousel when paused", "guessedname": "play", "guessedtype": "function"}, "pause": {"public": "", "return": {"type": "Object", "description": "The Carousel instance"}, "description": "Pauses the Carousel when playing", "guessedname": "pause", "guessedtype": "function"}, "hasPrevious": {"public": "", "return": {"type": "Boolean", "description": "true"}, "description": "Carousels wrap, so they always have previous", "guessedname": "hasPrevious", "guessedtype": "function"}, "next": {"public": "", "return": {"type": "Object", "description": "List"}, "description": "Selects the next item in the Carousel.", "guessedname": "next", "guessedtype": "function"}, "initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}, "hasNext": {"public": "", "return": {"type": "Boolean", "description": "true if not at the last item in the list"}, "description": "Carousels wrap, so they always have next", "guessedname": "hasNext", "guessedtype": "function"}, "previous": {"public": "", "return": {"type": "Object", "description": "List"}, "description": "Selects the previous item in the Carousel.", "guessedname": "previous", "guessedtype": "function"}}, "extends": "List", "superclass": "List", "file": "Carousel.js", "guessedtype": "property", "shortname": "Carousel", "requires": "ptclass", "properties": {"repeat": {"type": "Type Number", "description": "Integer value signalling whether the carousel is set to repeat", "private": ""}, "Carousel": {"guessedname": "Carousel", "type": "Object", "description": "Instance of Carousel", "private": "", "guessedtype": "property"}, "delay": {"description": "The time in milliseconds to remain on an item while playing", "private": "", "guessedname": "delay", "guessedtype": "property", "type": "Number", "final": ""}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}, "default.repeat": {"description": "Number of times to cycle through carousel items when playing, set to -1 to repeat forever", "default": "-1", "private": "", "guessedname": "repeat", "guessedtype": "property", "type": "Number"}, "playing": {"description": "Flag signalling the playing state of the carousel", "default": "false", "private": "", "guessedname": "playing", "guessedtype": "property", "type": "Boolean"}, "autoplay": {"description": "Automatically calls play on instantiation if set to true", "default": "true", "private": "", "guessedname": "autoplay", "guessedtype": "property", "type": "Boolean", "final": ""}}, "description": "A representation of Carousel"}, "NextButton": {"name": "NextButton", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'next' event"}, {"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'next' event"}, {"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'next' event"}, {"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'play' event"}, {"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'next' event"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"description": "PTClass constructor", "param": "{Object} $super Pointer to superclass constructor", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "guessedname": "initialize", "guessedtype": "function", "public": ""}}, "extends": "Button", "superclass": "Button", "file": "Previous.js", "guessedtype": "property", "shortname": "NextButton", "requires": "ptclass", "properties": {"Button": {"guessedname": "NextButton", "type": "Object", "description": "Instance of NextButton", "private": "", "guessedtype": "property"}, "PlayButton": {"guessedname": "PauseButton", "type": "Object", "description": "Instance of PlayButton", "private": "", "guessedtype": "property"}, "timer": {"type": "object", "description": "Repeat timer", "private": ""}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a button element preconfigured with a 'next' event"}, "FormSelect": {"name": "FormSelect", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Manages a web form select input and related options."}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}, "triggerAction": {"public": "", "return": {"type": "Void", "description": ""}, "description": "Fires a custom event on the element bound to this instance", "guessedname": "triggerAction", "guessedtype": "function"}, "getNotifyIds": {"return": {"type": "Array", "description": "The list of element ids."}, "description": "Determines the ids of any other components to notify\nbased on the \"aria-controls\" attribute.", "private": ""}}, "extends": "Button", "superclass": "Button", "file": "FormSelect.js", "guessedtype": "property", "shortname": "FormSelect", "requires": "ptclass", "properties": {"Reveal": {"guessedname": "FormSelect", "type": "Object", "description": "Instance of Reveal", "private": "", "guessedtype": "property"}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Manages a web form select input and related options."}, "OnButton": {"name": "OnButton", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'next' event"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "Button", "superclass": "Button", "file": "On.js", "guessedtype": "property", "shortname": "OnButton", "requires": "ptclass", "properties": {"defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a button element preconfigured with a 'next' event"}, "Dropdown": {"name": "Dropdown", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "The Dropdown component is a subclass of Abstract."}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"setFocus": {"return": {"type": "Void", "description": ""}, "params": [{"type": "Object", "name": "$jNode", "description": " JQuery DOM node reference"}], "description": "Sets focus to a JQuery DOM node", "private": ""}, "initARIARoles": {"return": {"type": "Void", "description": ""}, "description": "Initializes the Droplist control with ARIA attributes.\nSets \"role\" to \"menu\", \"menuitem\" and \"has-popup.\"", "private": ""}, "handleKeyup": {"return": {"type": "Void", "description": ""}, "params": [{"type": "Event", "name": "event", "description": " An event object"}, {"type": "Object", "name": "item", "description": " An object or a number"}], "description": "Handles the keyup event and looks for keycodes 38 and 40.  These correspond to \nup and down arrows.", "private": ""}, "selectItemHandler": {"return": {"type": "Void", "description": ""}, "params": [{"type": "Event", "name": "event", "description": " - Athena event"}, {"type": "Object", "name": "item", "description": " - JQuery DOM element"}], "description": "Handles the selected element.  Updates the selected element to be the new selected item.  The \"selected item\" \nis the innerHTML of the link or the one with class .athena-item.", "private": ""}, "selectedItemHandler": {"return": {"type": "Void", "description": ""}, "params": [{"type": "Event", "name": "event", "description": " - Athena event"}, {"type": "Object", "name": "item", "description": " - JQuery DOM element"}, {"type": "Integer", "name": "index", "description": " - Index of the selected item"}], "description": "The \"selected\" element handler for the selected item.  Looks for the title or the name\nwhich will display in the selected item.", "private": ""}, "findAthenaItems": {"return": {"type": "Collection", "description": "Collection of JQuery DOM link elements"}, "params": [{"type": "Object", "name": "$ul", "description": " - JQuery DOM reference to a list ( ul, ol or dd )"}, {"type": "String", "name": "classNameQuery", "description": " - CSS class query to search for (ex. \".athena-item\" )"}], "description": "Finds a collection of links that match a link and it's descendant classNameQuery", "private": ""}, "selectDropdownHandler": {"return": {"type": "Void", "description": ""}, "params": [{"type": "Event", "name": "event", "description": " - Athena event"}, {"type": "Object", "name": "item", "description": " - JQuery DOM element"}], "description": "Handles the list element select.  Fires the \"select\" event to the selected item and passes the selected element", "private": ""}, "DropdownInit": {"return": {"type": "Void", "description": ""}, "params": [{"type": "Object", "name": "settings", "description": " - Object literal containing settings which have been merged with default settings"}], "description": "Initializes the Dropdown component", "private": ""}, "selectedDropdownHandler": {"return": {"type": "Void", "description": ""}, "params": [{"type": "Event", "name": "event", "description": " - Athena event"}, {"type": "Object", "name": "item", "description": " - JQuery DOM element"}], "description": "Handler for the selected droplist item.  The handler triggers a \"selected\" event to the selectedItem.", "private": ""}, "initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}, "handleKeyupDropDownList": {"return": {"type": "Void", "description": ""}, "params": [{"type": "Event", "name": "event", "description": " An event object"}, {"type": "Object", "name": "item", "description": " An object or a number"}], "description": "Handles the keyup event when a list element has focus and looks for keycodes 13 and 32.  \nThese correspond to enter and the space key.", "private": ""}}, "extends": "Abstract", "superclass": "Abstract", "file": "Dropdown.js", "guessedtype": "property", "shortname": "Dropdown", "properties": {"$hiddenInput": {"type": "Object", "description": "JQuery DOM reference to the hidden input field.  Undefined\nwhen the Styled Dropdown control isn't in a form.", "private": ""}, "submitName": {"description": "The \"name\" for the selected item when form submitted", "private": "", "guessedname": "submitName", "guessedtype": "property", "type": "String", "final": ""}, "Dropdown": {"guessedname": "Dropdown", "type": "Object", "description": "Instance of Dropdown", "private": "", "guessedtype": "property"}, "selectedItem": {"description": "A selector scoped to the $element that matches the selectedItem", "private": "", "guessedname": "selectedItem", "guessedtype": "property", "type": "String", "final": ""}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}, "updateSelectedItem": {"description": "Flag that denotes whether to update the selected item.  By default, update selected item.", "private": "", "guessedname": "updateSelectedItem", "guessedtype": "property", "type": "Boolean", "final": ""}, "$dropDownList": {"type": "Object", "description": "The collection of select items", "private": ""}, "$selectedItem": {"type": "Object", "description": "A JDOM reference to the selected item outside of the select list", "private": ""}, "dropDownList": {"description": "A selector scoped to the $element that matches the list of select elements", "private": "", "guessedname": "dropDownList", "guessedtype": "property", "type": "String", "final": ""}}, "description": "The Dropdown component is a subclass of Abstract."}, "RightTip": {"name": "RightTip", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Tooltip class"}], "namespace": "", "module": "athena", "guessedname": "Class", "extends": "Tip", "superclass": "Tip", "file": "Right.js", "guessedtype": "property", "shortname": "RightTip", "requires": "ptclass", "description": "Tooltip class"}, "BelowTip": {"name": "BelowTip", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Tooltip class"}], "namespace": "", "module": "athena", "guessedname": "Class", "extends": "Tip", "superclass": "Tip", "file": "Below.js", "guessedtype": "property", "shortname": "BelowTip", "requires": "ptclass", "description": "Tooltip class"}, "config": {"name": "config", "namespace": "", "module": "athena", "file": "config.js", "shortname": "config", "description": "Athena config"}, "athena": {"name": "athena", "constructors": [{"params": [{"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Athena UI Framework"}], "namespace": "", "module": "athena", "guessedname": "ATHENA_CONFIG", "methods": {"isReady": {"return": {"type": "Boolean", "description": "True if all child controls have been executed"}, "static": "", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}], "description": "All child controls in the $element and the $element have been executed.", "public": ""}, "notifys": {"return": {"type": "Object", "description": "The target element (allows chaining)"}, "description": "Notifies observers of events", "static": "", "guessedname": "notify", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}, {"type": "string", "name": "event", "description": " the event type"}, {"type": "Array", "name": "$element", "description": " extra arguments associated with the event"}], "public": ""}, "getKeys": {"return": {"type": "Array", "description": "An array of Athena keys"}, "description": "Returns an array of all Athena keys on $element", "static": "", "guessedname": "getKeys", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}], "public": ""}, "getChildren": {"return": {"type": "Object", "description": "A Jquery collection of the children"}, "description": "Gets the children of the passed in $node filtered by filter", "static": "", "guessedname": "getChildren", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}, {"type": "String", "name": "filter", "description": " an optional css selector to use as a filter"}], "public": ""}, "getControl": {"return": {"type": "Object", "description": "The specified Athena control or the first control found if none specified"}, "description": "Returns a control instance with id", "static": "", "guessedname": "getControl", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}, {"type": "String", "name": "key", "description": " The id of returned control."}], "public": ""}, "create": {"return": {"type": "Object", "description": "The target element (allows chaining)"}, "description": "Decorates a node with Athena markup and instantiates controls.", "static": "", "guessedname": "create", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}, {"type": "Object", "name": "keys", "description": " to be decorated"}, {"type": "Object", "name": "settings", "description": " to be used in creation of controls"}], "public": ""}, "trigger": {"public": "", "params": [{"type": "String", "name": "event", "description": " An event type"}, {"type": "Array", "name": "parameters", "description": " Additional data to be passed to the callback handler"}], "description": "Wrap jQuery's 'trigger' with Athena functionality. See: http://api.jquery.com/trigger/", "guessedname": "trigger", "guessedtype": "function"}, "getControls": {"return": {"type": "Object", "description": "The Athena controls associated with the given element"}, "description": "Returns a controls object", "static": "", "guessedname": "getControls", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}], "public": ""}, "getData": {"return": {"type": "Object", "description": "The data object"}, "params": [{"type": "Object", "name": "$element", "description": " A jQuery object representing the control's DOM node"}, {"type": "String", "name": "key", "description": " An optional data key"}], "description": "Gets the JQuery data object for an Athena control \nwithin the 'athena-controls' namespace", "private": ""}, "getParents": {"return": {"type": "Object", "description": "A Jquery collection representing the parents"}, "description": "Gets all of the parents of the passed in $node matching filter", "static": "", "guessedname": "getParents", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}, {"type": "String", "name": "filter", "description": " an optional css selector to use as a filter"}], "public": ""}, "setData": {"return": {"type": "Object", "description": "The target element (allows chaining)"}, "params": [{"type": "Object", "name": "$element", "description": " A jQuery collection"}, {"type": "Object", "name": "data", "description": " An object containing the new data to store"}], "description": "Sets the JQuery data object for an Athena control \nwithin the 'athena-controls' namespace", "private": ""}, "Execute": {"return": {"type": "Void", "description": ""}, "params": [{"type": "Array", "name": "$node", "description": " A jQuery collection with the selected elements."}, {"type": "String", "name": "key", "description": " The name of the Control."}, {"type": "Function", "name": "Control", "description": " The Control's constructor."}], "description": "Instantiates a control with selected element.", "private": ""}, "observe": {"return": {"type": "Object", "description": "The target element (allows chaining)"}, "description": "Add an $observer to an $element", "static": "", "guessedname": "observe", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}, {"type": "Object", "name": "$observer", "description": " a jQuery collection"}], "public": ""}, "isControl": {"return": {"type": "Boolean", "description": "True if the element is a control"}, "description": "Returns true if the passed in element is a control an optional key can be \nused to match a specific Control", "static": "", "guessedname": "isControl", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}, {"type": "String", "name": "key", "description": " The name of Athena component to test"}], "public": ""}, "destroy": {"return": {"type": "Object", "description": "A JQuery collection of Athena controls"}, "description": "Destroys the binding of an Athena control to the $element", "static": "", "guessedname": "destroy", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}], "public": ""}, "execute": {"return": {"type": "Object", "description": "The executed element (allows chaining)"}, "description": "Parses the $element for Athena controls, loads, and instatiates them.", "static": "", "guessedname": "execute", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}], "public": ""}, "getParent": {"return": {"type": "Object", "description": "A Jquery collection representing the parent"}, "description": "Gets the first parent of the passed in $node matching filter", "static": "", "guessedname": "getParent", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}, {"type": "String || function || Object", "name": "filter", "description": " a css selector, jQuery collection or function to be used as a filter"}], "public": ""}, "isExecuted": {"return": {"type": "Boolean", "description": "True if controls on $element are finished executing"}, "description": "All controls on a node have been executed.", "static": "", "guessedname": "isExecuted", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}], "public": ""}, "JSONify": {"return": {"type": "Void", "description": ""}, "description": "Using json.stringify will break in older browsers, so inject\nin an external library when needed.  Otherwise use the native functionality.", "private": "", "params": [{"type": "Object", "name": "obj", "description": " A JSON object to convert to a string."}], "guessedname": "JSONify", "guessedtype": "function"}, "getDescendants": {"return": {"type": "Object", "description": "A Jquery collection of the decendants"}, "description": "Gets the decendants of the passed in $node filtered by filter", "static": "", "guessedname": "getDescendants", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}, {"type": "String", "name": "filter", "description": " an optional css selector to use as a filter"}], "public": ""}, "decorate": {"return": {"type": "String", "description": "The conjoined keys"}, "description": "Decorates a node with Athena markup.", "static": "", "guessedname": "decorate", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}, {"type": "Object", "name": "keys", "description": " to be decorated"}, {"type": "Object", "name": "settings", "description": " to be used in creation of controls"}], "public": ""}, "athena": {"description": "Athena JQuery plugin", "public": "", "guessedname": "athena", "guessedtype": "function"}, "unobserve": {"return": {"type": "Object", "description": "The target element (allows chaining)"}, "description": "Remove an observer from an $element", "static": "", "guessedname": "unobserve", "guessedtype": "function", "params": [{"type": "Object", "name": "$element", "description": " a jQuery collection"}, {"type": "Object", "name": "$observer", "description": " a jQuery collection"}], "public": ""}}, "file": "athena.js", "guessedtype": "property", "shortname": "athena", "requires": "inject, ptclass", "description": "Athena UI Framework"}, "Reveal": {"name": "Reveal", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Toggles the display of related content to some select action on a checkbox, radio button, or select dropdown."}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}, "toggle": {"public": "", "return": {"type": "Void", "description": ""}, "description": "Toggles the display of the related content by\nadding/removing the hidden class on the component's key element.", "guessedname": "toggle", "guessedtype": "function"}, "getRevealTarget": {"public": "", "return": {"type": "Object", "description": "A JQuery object referencing the desired target content node"}, "description": "Calculates the target node based on whether a single\ntarget or a mapping of targets is specified in the\nconfiguration", "guessedname": "getRevealTarget", "guessedtype": "function"}, "hide": {"public": "", "return": {"type": "Void", "description": ""}, "description": "Hides the related content.", "guessedname": "hide", "guessedtype": "function"}, "show": {"public": "", "return": {"type": "Void", "description": ""}, "description": "Shows the related content.", "guessedname": "show", "guessedtype": "function"}}, "extends": "SelectButton", "superclass": "SelectButton", "file": "Reveal-v1.js", "guessedtype": "property", "shortname": "Reveal", "requires": "ptclass", "properties": {"Reveal": {"guessedname": "Reveal", "type": "Object", "description": "Instance of Reveal", "private": "", "guessedtype": "property"}, "revealTarget": {"type": "Object", "description": "The node for the revealed content's container", "private": ""}, "revealClass": {"type": "String", "description": "The CSS class that Reveal uses to toggle the related-content display", "private": ""}, "revealGroup": {"type": "Object", "description": "The set of grouped radio buttons or select options", "guessedname": "revealGroup", "guessedtype": "property"}, "revealGroupLength": {"type": "Int", "description": "The number of items in the revealGroup", "guessedname": "revealGroupLength", "guessedtype": "property"}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}, "dontHide": {"type": "Boolean", "description": "Don't hide the related content on page load if the element\nis already checked or selected", "guessedname": "dontHide", "guessedtype": "property"}}, "description": "Toggles the display of related content to some select action on a checkbox, radio button, or select dropdown."}, "SelectButton": {"name": "SelectButton", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'next' event"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "Button", "superclass": "Button", "file": "Select.js", "guessedtype": "property", "shortname": "SelectButton", "requires": "ptclass", "properties": {"PlayButton": {"guessedname": "SelectButton", "type": "Object", "description": "Instance of PlayButton", "private": "", "guessedtype": "property"}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a button element preconfigured with a 'next' event"}, "Button": {"name": "Button", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}, "enable": {"guessedname": "enable", "return": {"type": "Void", "description": ""}, "description": "Enables the Button by removing a disabled attribute (inputs and buttons only) and the class athena-disabled", "private": "", "guessedtype": "function"}, "disable": {"guessedname": "disable", "return": {"type": "Void", "description": ""}, "description": "Disables the Button by adding a disabled attribute (inputs and buttons only) and the class athena-disabled", "private": "", "guessedtype": "function"}, "setupAlly": {"return": {"type": "Void", "description": ""}, "description": "Setups accessibility for the button.  If the button is a \"link\" then it will have an ARIA role of button and \nwill be selectable by the space bar.", "private": ""}}, "extends": "Abstract", "superclass": "Abstract", "file": "Button.js", "guessedtype": "property", "shortname": "Button", "requires": "ptclass", "properties": {"index": {"type": "Number", "private": ""}, "Button": {"guessedname": "Button", "type": "Object", "description": "Instance of Button", "private": "", "guessedtype": "property"}, "states": {"type": "Array", "private": ""}, "item": {"type": "String | Number", "description": "Item used as a parameter for selected events", "private": ""}, "defaults": {"description": "Default configuration values for all instances", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}, "action": {"type": "Object", "description": "Custom event name", "private": ""}, "isAnchor": {"guessedname": "isAnchor", "type": "Boolean", "description": "Flag to denote whether the button component is a <button> or <a>", "private": "", "guessedtype": "property"}}, "description": "Representation of a button element"}, "List": {"name": "List", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "A representation of a stateful list"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"size": {"public": "", "return": {"type": "Number", "description": "The number of items in the list"}, "description": "Returns the number of items in the list.", "guessedname": "size", "guessedtype": "function"}, "hasPrevious": {"public": "", "return": {"type": "Boolean", "description": "true if not at the first item in the list"}, "description": "Determines if there are any lower-index items in the list.", "guessedname": "hasPrevious", "guessedtype": "function"}, "handleKeyup": {"return": {"type": "Void", "description": ""}, "params": [{"type": "Event", "name": "event", "description": " An event object"}, {"type": "Object", "name": "item", "description": " An object or a number"}], "description": "Handles the keyup event and looks for keycodes 37, 38, 39 and 40.  These correspond to left, up, right and down\narrows.  Left and up correspond to action \"previous\" and right and next correspond to \"next\".", "private": ""}, "last": {"public": "", "return": {"type": "Object", "description": "List"}, "description": "Selects the last item in the list.", "guessedname": "last", "guessedtype": "function"}, "index": {"public": "", "return": {"type": "Number", "description": "The index of the selected item"}, "description": "Returns the index of the selected item.", "guessedname": "index", "guessedtype": "function"}, "items": {"public": "", "return": {"type": "Array", "description": "The array of list items"}, "description": "Returns the array of list items.", "guessedname": "items", "guessedtype": "function"}, "remove": {"return": {"type": "Object", "description": "List"}, "description": "Removes an item from $element", "params": [{"type": "Array", "name": "A", "description": " jQuery Collection of $items to remove"}], "guessedname": "remove", "guessedtype": "function", "public": ""}, "next": {"public": "", "return": {"type": "Object", "description": "List"}, "description": "Selects the next item in the list.", "guessedname": "next", "guessedtype": "function"}, "current": {"public": "", "return": {"type": "Object", "description": "JQuery object-reference to the selected item"}, "description": "Returns the currently-selected item.", "guessedname": "current", "guessedtype": "function"}, "append": {"return": {"type": "Object", "description": "List"}, "description": "Append a new item to $element", "params": [{"type": "Array", "name": "A", "description": " jQuery Collection of $items to append"}], "guessedname": "append", "guessedtype": "function", "public": ""}, "initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}, "hasNext": {"public": "", "return": {"type": "Boolean", "description": "true if not at the last item in the list"}, "description": "Determines if there are any higher-index items in the list.", "guessedname": "hasNext", "guessedtype": "function"}, "first": {"public": "", "return": {"type": "Object", "description": "List"}, "description": "Selects the first item in the list.", "guessedname": "first", "guessedtype": "function"}, "select": {"return": {"type": "Object", "description": "List"}, "description": "Select an item in the list", "params": [{"type": "Integer|String|Object", "name": "item", "description": " The index of the item to select, a css selector, or a JQuery collection containting the item."}], "guessedname": "select", "guessedtype": "function", "public": ""}, "previous": {"public": "", "return": {"type": "Object", "description": "List"}, "description": "Selects the previous item in the list.", "guessedname": "previous", "guessedtype": "function"}}, "extends": "Abstract", "superclass": "Abstract", "file": "List.js", "guessedtype": "property", "shortname": "List", "requires": "ptclass", "properties": {"Button": {"guessedname": "List", "type": "Object", "description": "Instance of Button", "private": "", "guessedtype": "property"}, "$items": {"type": "Object", "description": "JQuery collection of like items in the list", "private": ""}, "direction": {"description": "Denotes the behavior of left, right, top and down arrow keys.", "default": "'horizontal'", "guessedname": "orientation", "guessedtype": "property", "type": "String", "final": ""}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}, "autoPlay": {"guessedname": "autoPlay", "type": "Boolean", "description": "A boolean flag denoting that the list is \"autoplaying\"; this occurs for Carousel.  Why is it in List, then?\nUm...", "private": "", "guessedtype": "property"}}, "description": "A representation of a stateful list"}, "OpenButton": {"name": "OpenButton", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with an 'open' event"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "Button", "superclass": "Button", "file": "Open.js", "guessedtype": "property", "shortname": "OpenButton", "requires": "ptclass", "properties": {"defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a button element preconfigured with an 'open' event"}, "RadioButton": {"name": "RadioButton", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Toggles the display of related content to a change event from a grouping of radio buttons."}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}, "triggerAction": {"public": "", "return": {"type": "Void", "description": ""}, "description": "Fires a custom event on the element bound to this instance", "guessedname": "triggerAction", "guessedtype": "function"}, "getNotifyIds": {"return": {"type": "Array", "description": "The list of element ids."}, "description": "Determines the ids of any other components to notify\nbased on the \"aria-controls\" attribute.", "private": ""}}, "extends": "FormSelect", "superclass": "FormSelect", "file": "Radio.js", "guessedtype": "property", "shortname": "RadioButton", "requires": "ptclass", "properties": {"Reveal": {"guessedname": "RadioButton", "type": "Object", "description": "Instance of Reveal", "private": "", "guessedtype": "property"}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Toggles the display of related content to a change event from a grouping of radio buttons."}, "SwitchButton": {"name": "SwitchButton", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'switch' event"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "Button", "superclass": "Button", "file": "Switch.js", "guessedtype": "property", "shortname": "SwitchButton", "requires": "ptclass", "properties": {"Button": {"guessedname": "SwitchButton", "type": "Object", "description": "Instance of Button", "private": "", "guessedtype": "property"}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a button element preconfigured with a 'switch' event"}, "Dialog": {"name": "Dialog", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a Dialog"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "Abstract", "superclass": "Abstract", "file": "Dialog.js", "guessedtype": "property", "shortname": "Dialog", "requires": "ptclass", "properties": {"dependencies": {"type": "Array", "description": "jQuery UI Dependencies", "private": ""}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a Dialog"}, "Checkbox": {"name": "Checkbox", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Toggles the display of related content to a change event \nfrom a checkbox or other single element."}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}, "isChecked": {"return": {"type": "Boolean", "description": "True if element is checked"}, "description": "Is the Checkbox checked?", "private": ""}}, "extends": "Abstract", "superclass": "Abstract", "file": "Checkbox.js", "guessedtype": "property", "shortname": "Checkbox", "requires": "ptclass", "properties": {"checkedState": {"type": "String", "description": "Describes the current state of the checkbox"}, "Checkbox": {"guessedname": "Checkbox", "type": "Object", "description": "Instance of Checkbox", "private": "", "guessedtype": "property"}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Toggles the display of related content to a change event \nfrom a checkbox or other single element."}, "Tabs": {"name": "Tabs", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "The Tabs component is a subclass of Abstract and consists of a tablist, tabs and tabpanels."}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}, "initARIARoles": {"return": {"type": "Void", "description": ""}, "description": "Initializes the Tab control with ARIA attributes.\nSets \"role\" to \"tablist\", \"presentation\" and \"tab\".", "private": ""}, "handleTabSelect": {"return": {"type": "Void", "description": "Description"}, "params": [{"type": "Integer", "name": "item", "description": " Index representing the panel"}], "description": "Syncs the appropriate panel with the selected tab", "private": ""}, "tabInit": {"return": {"type": "Void", "description": ""}, "description": "Initializes the tab component", "private": ""}}, "extends": "Abstract", "superclass": "Abstract", "file": "Tabs.js", "guessedtype": "property", "shortname": "Tabs", "requires": "ptclass", "properties": {"Tabs": {"guessedname": "Tabs", "type": "Object", "description": "Instance of Tabs", "private": "", "guessedtype": "property"}, "$tabList": {"type": "Object", "description": "JQuery object for the set of tabs", "private": ""}, "$tabPanels": {"type": "Object", "description": "JQuery object for the set of tab panels", "private": ""}, "tabPanels": {"description": "A selector scoped to the $element that matches tabpanels", "private": "", "guessedname": "tabPanels", "guessedtype": "property", "type": "String", "final": ""}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}, "tabList": {"description": "A selector scoped to the $element that matches the tablist", "private": "", "guessedname": "tabList", "guessedtype": "property", "type": "String", "final": ""}}, "description": "The Tabs component is a subclass of Abstract and consists of a tablist, tabs and tabpanels."}, "Abstract": {"name": "Abstract", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "The base component class all other UI components inherit from."}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"on": {"description": "Creates an event listener for a type", "public": "", "guessedname": "on", "guessedtype": "property"}, "off": {"description": "Unbinds event listeners of a type", "public": "", "guessedname": "off", "guessedtype": "property"}, "trigger": {"description": "Fires a custom event", "public": "", "guessedname": "trigger", "guessedtype": "property"}, "getNamespace": {"public": "", "return": {"type": "", "description": "namespace"}, "description": "Gets the current namspace", "guessedname": "getNamespace", "guessedtype": "function"}, "one": {"description": "Creates an event listener for a type, fires exactly once.", "public": "", "guessedname": "one", "guessedtype": "property"}, "observe": {"public": "", "params": [{"type": "Array", "name": "$observer", "description": " A jQuery collection to be added to the observers list"}], "description": "Observe events", "guessedname": "observe", "guessedtype": "function"}, "setNamespace": {"return": {"type": "", "description": "namespace"}, "description": "Sets the namespace", "params": [{"type": "String", "name": "value", "description": " the new namespace"}], "guessedname": "setNamespace", "guessedtype": "function", "public": ""}, "initialize": {"public": "", "params": [{"type": "Object", "name": "$element", "description": " JQuery object for DOM node wrapped by this component"}, {"type": "Object", "name": "settings", "description": " Custom settings for this component"}], "description": "constructor", "guessedname": "initialize", "guessedtype": "function"}, "unobserve": {"public": "", "params": [{"type": "Array", "name": "$subscriber", "description": " A jQuery collection to unsubscribe"}], "description": "Cease observation of events", "guessedname": "unobserve", "guessedtype": "function"}}, "file": "Abstract.js", "guessedtype": "property", "shortname": "Abstract", "requires": "ptclass", "properties": {"$observe": {"type": "{Array}", "description": "A jQuery collection that is observed for events", "private": ""}, "Abstract": {"guessedname": "Abstract", "type": "Object", "description": "Instance of Abstract", "private": "", "guessedtype": "property"}, "namespace": {"type": "{Object}", "description": "The namespace used in all event bindings\nSee http://docs.jquery.com/Namespaced_Events.", "private": ""}, "subscribe": {"type": "{Array}", "description": "A jQuery collection that is notified of events", "private": ""}, "observe": {"type": "{String}", "description": "A selector that matches nodes to observe", "guessedname": "observe", "guessedtype": "property"}, "notify": {"type": "{String}", "description": "A selector that matches nodes to notify of events", "guessedname": "notify", "guessedtype": "property"}, "defaults": {"guessedname": "defaults", "type": "{Object}", "description": "Default configuration values", "private": "", "guessedtype": "property"}}, "description": "The base component class all other UI components inherit from."}, "CloseButton": {"name": "CloseButton", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a button element preconfigured with a 'next' event"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}}, "extends": "Button", "superclass": "Button", "file": "Close.js", "guessedtype": "property", "shortname": "CloseButton", "requires": "ptclass", "properties": {"defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a button element preconfigured with a 'next' event"}, "Loader": {"name": "Loader", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element containing this component"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a Loader"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"public": "", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "description": "PTClass constructor", "guessedname": "initialize", "guessedtype": "function"}, "load": {"return": {"type": "Object", "description": "The Loader instance"}, "description": "Loads the content into the specified node", "params": [{"type": "String", "name": "url", "description": " an Indicator for the content to load. This can be a hash (#id), a remote url or a url with a hash."}], "guessedname": "load", "guessedtype": "function", "public": ""}}, "extends": "Abstract", "superclass": "Abstract", "file": "Loader.js", "guessedtype": "property", "shortname": "Loader", "requires": "ptclass", "properties": {"content": {"type": "Object", "description": "The node that the content is put into", "private": ""}, "Button": {"guessedname": "Loader", "type": "Object", "description": "Instance of Button", "private": "", "guessedtype": "property"}, "method": {"type": "{String}", "description": "Method to be used when populating target nodes content. Expects: replace || append || prepend", "guessedname": "method", "guessedtype": "property"}, "defaults": {"description": "Default configuration values for all instances", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}}, "description": "Representation of a Loader"}, "Switcher": {"name": "Switcher", "constructors": [{"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a stateful button element"}, {"params": [{"type": "HTMLElement", "name": "element", "description": " The HTML element surrounded by the control"}, {"type": "Object", "name": "settings", "description": " Configuration properties for this instance"}], "description": "Representation of a stateful button element"}], "namespace": "", "module": "athena", "guessedname": "Class", "methods": {"initialize": {"description": "PTClass constructor", "param": "{Object} $super Pointer to superclass constructor", "params": [{"type": "Object", "name": "$super", "description": " Pointer to superclass constructor"}, {"type": "Object", "name": "$element", "description": " JQuery object for the element wrapped by the component"}, {"type": "Object", "name": "settings", "description": " Configuration settings"}], "guessedname": "initialize", "guessedtype": "function", "public": ""}, "toggleState": {"return": {"type": "Object", "description": "The Switcher instance (for chaining)"}, "description": "Sets the state of the switch", "params": [{"type": "Object", "name": "$btn", "description": " The button that was clicked"}], "guessedname": "toggleState", "guessedtype": "function", "public": ""}, "init": {"return": {"type": "", "description": ""}, "description": "Inits the switcher", "private": ""}}, "extends": "Container", "superclass": "Container", "file": "Switcher.js", "guessedtype": "property", "shortname": "Switcher", "requires": "ptclass", "properties": {"states": {"type": "Array", "description": "An array of objects representing available states f\nor the switch instance, passed on through the published event.", "guessedname": "states", "guessedtype": "property"}, "Switcher": {"guessedname": "Switcher", "type": "Object", "description": "Instance of Switcher", "private": "", "guessedtype": "property"}, "defaults": {"description": "Default configuration values", "private": "", "guessedname": "defaults", "guessedtype": "property", "type": "Object", "final": ""}, "buttons": {"type": "Object", "description": "The buttons within the Switcher container", "guessedname": "buttons", "guessedtype": "property"}}, "description": "Representation of a stateful button element"}}, "version": "1.0.0", "modules": {"athena": {"description": "Athena UI Framework", "submodules": [], "classlist": ["athena", "config", "Abstract", "Accordion", "Button", "Carousel", "Checkbox", "Container", "Dialog", "Dropdown", "FormSelect", "List", "Loader", "RadioButton", "Reveal", "Switcher", "Tabs", "Tip", "CloseButton", "FirstButton", "LastButton", "LoadButton", "MultiSwitch", "NextButton", "NextButton", "OffButton", "OnButton", "OpenButton", "NextButton", "NextButton", "NextButton", "SelectButton", "SwitchButton", "Switcher", "BelowTip", "LeftTip", "RightTip"], "filelist": ["athena.js", "config.js", "Abstract.js", "Accordion.js", "Button.js", "Carousel.js", "Checkbox.js", "Container.js", "Dialog.js", "Dropdown.js", "FormSelect.js", "List.js", "Loader.js", "Radio.js", "Reveal-v1.js", "Switcher.js", "Tabs.js", "Tip.js", "Close.js", "First.js", "Last.js", "Load.js", "MultiSwitch.js", "Next.js", "NextRepeat.js", "Off.js", "On.js", "Open.js", "Pause.js", "Play.js", "Previous.js", "Select.js", "Switch.js", "Switcher.js", "Below.js", "Left.js", "Right.js"], "subdata": {}, "name": "athena"}}, "filemap": {"NextRepeat.js": {"classlist": ["NextButton"], "name": "NextRepeat.js", "module": "athena"}, "Container.js": {"classlist": ["Container"], "name": "Container.js", "module": "athena"}, "Tabs.js": {"classlist": ["Tabs"], "name": "Tabs.js", "module": "athena"}, "List.js": {"classlist": ["List"], "name": "List.js", "module": "athena"}, "Reveal-v1.js": {"classlist": ["Reveal"], "name": "Reveal-v1.js", "module": "athena"}, "Switcher.js": {"classlist": ["Switcher"], "name": "Switcher.js", "module": "athena"}, "Play.js": {"classlist": ["NextButton"], "name": "Play.js", "module": "athena"}, "Last.js": {"classlist": ["LastButton"], "name": "Last.js", "module": "athena"}, "athena.js": {"classlist": ["athena"], "name": "athena.js", "module": "athena"}, "Previous.js": {"classlist": ["NextButton"], "name": "Previous.js", "module": "athena"}, "Tip.js": {"classlist": ["Tip"], "name": "Tip.js", "module": "athena"}, "FormSelect.js": {"classlist": ["FormSelect"], "name": "FormSelect.js", "module": "athena"}, "Left.js": {"classlist": ["LeftTip"], "name": "Left.js", "module": "athena"}, "Dialog.js": {"classlist": ["Dialog"], "name": "Dialog.js", "module": "athena"}, "On.js": {"classlist": ["OnButton"], "name": "On.js", "module": "athena"}, "Abstract.js": {"classlist": ["Abstract"], "name": "Abstract.js", "module": "athena"}, "Load.js": {"classlist": ["LoadButton"], "name": "Load.js", "module": "athena"}, "Dropdown.js": {"classlist": ["Dropdown"], "name": "Dropdown.js", "module": "athena"}, "Switch.js": {"classlist": ["SwitchButton"], "name": "Switch.js", "module": "athena"}, "Right.js": {"classlist": ["RightTip"], "name": "Right.js", "module": "athena"}, "config.js": {"classlist": ["config"], "name": "config.js", "module": "athena"}, "Loader.js": {"classlist": ["Loader"], "name": "Loader.js", "module": "athena"}, "Pause.js": {"classlist": ["NextButton"], "name": "Pause.js", "module": "athena"}, "Accordion.js": {"classlist": ["Accordion"], "name": "Accordion.js", "module": "athena"}, "Checkbox.js": {"classlist": ["Checkbox"], "name": "Checkbox.js", "module": "athena"}, "Select.js": {"classlist": ["SelectButton"], "name": "Select.js", "module": "athena"}, "Close.js": {"classlist": ["CloseButton"], "name": "Close.js", "module": "athena"}, "Carousel.js": {"classlist": ["Carousel"], "name": "Carousel.js", "module": "athena"}, "Open.js": {"classlist": ["OpenButton"], "name": "Open.js", "module": "athena"}, "Next.js": {"classlist": ["NextButton"], "name": "Next.js", "module": "athena"}, "Off.js": {"classlist": ["OffButton"], "name": "Off.js", "module": "athena"}, "First.js": {"classlist": ["FirstButton"], "name": "First.js", "module": "athena"}, "Button.js": {"classlist": ["Button"], "name": "Button.js", "module": "athena"}, "Radio.js": {"classlist": ["RadioButton"], "name": "Radio.js", "module": "athena"}, "MultiSwitch.js": {"classlist": ["MultiSwitch"], "name": "MultiSwitch.js", "module": "athena"}, "Below.js": {"classlist": ["BelowTip"], "name": "Below.js", "module": "athena"}}}